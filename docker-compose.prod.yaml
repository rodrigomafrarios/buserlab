version: '3'
services: 
  db:
    image: postgres
    container_name: db
    environment:
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=app
    ports:
      - 5432:5432
    volumes:
      - ./dbdata/postgres:/var/lib/postgresql/data
    networks:
      - app_network
  backend:
    container_name: backend
    build:
      context: ./
      dockerfile: ./.docker/backend/Dockerfile
    expose:
      - 8000
    volumes: 
      - ./backend/api:/api
      - ./backend/requirements.txt:/api/requirements.txt
      - ./.docker/backend/entrypoint.sh:/api/entrypoint.sh
      - ./.env/prod.env:/api/prod.env
    entrypoint: dockerize -wait tcp://db:5432 -template ./prod.env -timeout 40s ./entrypoint.sh
    environment: 
      - DEBUG=1
      - DJANGO_DB_HOST=db
      - DJANGO_DB_PORT=5432
      - DJANGO_DB_NAME=app
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=app
      - DJANGO_ALLOWED_HOSTS=localhost
      - DJANGO_CORS_ORIGIN_WHITELIST=https://buserlab.com.s3-website-us-east-1.amazonaws.com
    networks:
      - app_network
  nginx:
    image: nginx
    container_name: nginx
    restart: always
    volumes:
      - ./nginx/buserlab.prod.conf:/etc/nginx/conf.d/buserlab.prod.conf
    ports:
      - 80:80
    depends_on:
      - backend
    networks:
      - app_network       
networks:
  app_network: