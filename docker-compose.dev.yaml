version: '3'
services: 
  db:
    image: postgres
    container_name: db
    environment:
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=app
    ports:
      - 5432:5432
    volumes:
      - ./dbdata/postgres:/var/lib/postgresql/data
    networks:
      - app_network
  backend:
    container_name: backend
    build:
      context: ./
      dockerfile: ./.docker/backend/Dockerfile
    expose:
      - 8000
    networks:
      - app_network
    volumes: 
      - ./backend/api:/api
      - ./backend/requirements.txt:/api/requirements.txt
      - ./.docker/backend/entrypoint.sh:/api/entrypoint.sh
    entrypoint: dockerize -wait tcp://db:5432 -template ./.env/dev.env -timeout 40s ./entrypoint.sh
    environment: 
      - DEBUG=1
      - DJANGO_DB_HOST=db
  frontend:
    container_name: frontend
    build:
      context: ./
      dockerfile: ./.docker/frontend/Dockerfile
    volumes:
      - ./frontend:/frontend
      - ./.docker/frontend/entrypoint.sh:/frontend/entrypoint.sh
    entrypoint: ./entrypoint.sh
    expose:
      - 3000
    networks:
      - app_network
  nginx:
    image: nginx
    container_name: nginx
    restart: always
    volumes:
      - ./nginx:/etc/nginx/conf.d
    ports:
      - 80:80
    depends_on:
      - backend
      - frontend
    networks:
      - app_network       
networks:
  app_network: